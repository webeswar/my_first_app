{"version":3,"sources":["person1.svg","Resume.js","App.js","serviceWorker.js","index.js","person.svg"],"names":["module","exports","Resume","prop","info","data","profiles","location","id","className","style","boxShadow","basics","gender","src","profileIcon","alt","width","profileIcon1","name","fontStyle","role","href","email","mobile","address","summary","map","summaryValue","summaryIndex","key","education","educationValue","educationIndex","degree","institute","percentage","skills","computer","webdev","core","editings","Home","console","log","value","index","to","pathname","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c4ef81d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/person1.2f5efde6.svg\";","import React from 'react';\r\nimport data from './data/data.json';\r\nimport profileIcon from './person.svg';\r\nimport profileIcon1 from './person1.svg';\r\n\r\nlet Resume=(prop)=>{\r\n\tlet info=data.profiles[prop.location.data.id];\r\n\treturn(\r\n\t<div className=\"row justify-content-center\">\r\n\t <div className=\"col-lg-3 m-2\">\r\n\t <div className=\"card shadow\" style={{boxShadow:\"5px 8px 8px -8px #000\"}}>\r\n\t <div className=\"card-body p-2 text-center\">\r\n\t {info.basics.gender===\"male\" ? <img src={profileIcon} alt=\"Profile icon\" style={{width:\"30%\"}}/> : <img src={profileIcon1} alt=\"Profile icon\" style={{width:\"30%\"}}/>}\r\n             <h2> {info.basics.name} </h2>\r\n              <h5 className=\"text-secondary\" style={{fontStyle:\"italic\"}}> {info.basics.role}</h5> <hr />\r\n\r\n\r\n               <a href={\"mailto:\"+info.basics.email}> {info.basics.email}</a> <br>\r\n                         </br>\r\n               <a href={\"tel:\"+info.basics.mobile}> {info.basics.mobile}</a> <br />\r\n                <p> {info.basics.address} </p>\r\n\t     </div>\r\n\t </div>\r\n    </div>\r\n\r\n\r\n   \r\n\t <div className=\"col-lg-6 m-2\">\r\n\t <div className=\"card shadow\" style={{boxShadow:\"5px 8px 8px -8px #000\"}}>\r\n\t <div className=\"card-body\">\r\n            <div className=\"card-body text-center\">\r\n                 <h3> Resume </h3>  <hr />\r\n                 <ul>\r\n                      {info.summary.map((summaryValue,summaryIndex)=>(\r\n                        <li key={summaryIndex}> {summaryValue} </li>\r\n                      \t))}\r\n                 </ul>\r\n\r\n                 <h3> Educational Qualifications </h3>\r\n                 <div className=\"table-responsive\">\r\n                      <table className=\"table table-bordered\">\r\n                      <thead className=\"thead-dark\">\r\n                      <tr>\r\n                      <td> Degree </td>\r\n                      <td> Institute </td>\r\n                      <td> Percentage  </td>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                       {info.education.map((educationValue, educationIndex)=>(\r\n                       \t<tr key={educationIndex}>\r\n                           <td> {educationValue.degree} </td>\r\n                           <td> {educationValue.institute} </td>\r\n                           <td> {educationValue.percentage} </td>\r\n                       \t</tr>\r\n                        ))}\r\n                      </tbody>\r\n                      </table>\r\n                 </div>\r\n                 <div>\r\n                      <h3 className=\"text-left\">Skills:</h3>\r\n                      <ul className=\"text-left\" >\r\n                       <li>{info.skills.computer}</li>\r\n                       <li>{info.skills.webdev}</li>\r\n                       <li>{info.skills.core}</li>\r\n                       <li> {info.skills.editings} </li>\r\n                      </ul>\r\n                 </div>\r\n            </div>\r\n\t     </div>\r\n\t </div>\r\n</div>\r\n</div>\r\n)\r\n}\r\n\r\n\r\nexport default Resume;","import React from 'react';\nimport data from './data/data.json';\nimport profileIcon from './person.svg';\nimport profileIcon1 from './person1.svg';\nimport {BrowserRouter,Route,Switch,Link} from 'react-router-dom';\nimport Resume from './Resume';\n// import SC from './StatesConcept';\n\nlet App=()=>{\n  return(\n      <BrowserRouter>\n        <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/resume' component={Resume}/>\n        </Switch>\n      </BrowserRouter>\n  )\n}\n\n\n\nlet Home=()=>{\n  let profiles=data.profiles;\n  console.log(profiles);\n  return(\n    <div className=\"row justify-content-center\">\n    {profiles.map((value,index)=>(\n      <div className=\"col-lg-4 col-md-4 col-sm-10 mt-1\" key={index}>\n      {/* Card */}\n      <div className=\"card\" style={{boxShadow:\"0px 8px 8px -8px #000\"}}>\n          <div className=\"card-body text-center\">\n            {value.basics.gender===\"male\" ? <img src={profileIcon} alt=\"Profile icon\" style={{width:\"30%\"}}/> : <img src={profileIcon1} alt=\"Profile icon\" style={{width:\"30%\"}}/>}\n            <h3> {value.basics.name} </h3>\n            <h5 className=\"text-secondary\" style={{fontStyle:\"italic\"}}> {value.basics.role}</h5> <hr />\n\n\n               <a href={\"mailto:\"+value.basics.email}> {value.basics.email}</a> <br>\n                         </br>\n               <a href={\"tel:\"+value.basics.mobile}> {value.basics.mobile}</a> <br />\n               \n               <Link to={{pathname:'/resume',data:{id:index}}} className=\"btn btn-secondary text-white btn-block btn-sm\"> View profile</Link>\n                       </div>\n                   </div>\n                 </div>\n               ))}\n               </div>\n               )\n}             \n\nexport default App;\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/person.b935d5cc.svg\";"],"sourceRoot":""}